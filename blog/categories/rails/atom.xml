<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | coding on the way]]></title>
  <link href="http://ailenswpu.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://ailenswpu.github.io/"/>
  <updated>2015-06-29T22:47:08+08:00</updated>
  <id>http://ailenswpu.github.io/</id>
  <author>
    <name><![CDATA[ailen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails_admin跟devise的配合使用]]></title>
    <link href="http://ailenswpu.github.io/blog/2013/03/24/rails-admingen-devisede-pei-he-shi-yong/"/>
    <updated>2013-03-24T21:43:00+08:00</updated>
    <id>http://ailenswpu.github.io/blog/2013/03/24/rails-admingen-devisede-pei-he-shi-yong</id>
    <content type="html"><![CDATA[<p>最近在做项目的使用经过同学的推荐使用了<a href="https://github.com/sferik/rails_admin">rails_admin</a>里面自带了<a href="https://github.com/plataformatec/devise">devise</a>，rails_admin是推荐很多人推荐的后台管理，其好处就是简单配置，对于CRUD系统可能很简单，但是对于一些特殊需求的可能就难以满足要求了，不过为了满足大多数人的要求，加上自己的一个总结，具体阐述一下rails_admin的使用方法:
1. 首先根据<a href="https://github.com/sferik/rails_admin#installation">Installation</a>安装基本的配置环境,包括devise。
2. 接着需要对config/initializers/rails_admin.rb进行配置:
    RailsAdmin may need a way to know who the current user is]
    config.current_user_method { current_admin } # auto-generated
这一段代码主要是对于当前需要验证的用户的识别，可以是current_MODELNAME,很多系统的管理员是单独的model例如admin，那么就改成current_admin。
     Include specific models (exclude the others):
     config.included_models = [model1,model2,model3,&hellip;.]
这个主要是对于需要后台进行管理的model的配置，如果配置了一个model以后，会有相应model的CRUD，同时会有导出等功能.
3. 最后说一下个人使用rails_admin的常用一些配置跟DSL具体参见<a href="https://github.com/sferik/rails_admin/wiki">wiki</a>
首先就是对于model中的例如性别、xx类型，在数据库中都是存储的int类型，但是在页面中需要用一个清晰明了的汉字来表示，那么怎么做呢，rails_admin提供了一种单独的DSL(<a href="https://github.com/sferik/rails_admin/wiki/Railsadmin-DSL">DSL两种配置方法</a>):
当model中有一个xx(如:ad_type)属性在页面中需要使用select来进行转换，参见<a href="https://github.com/sferik/rails_admin/wiki/Enumeration">Enumeration</a>,定义一个方法如下:
    def ad_type_enum
    {首页广告: 1, 弹出层广告: 2 , 关于我们: 3 ,关于背景: 4}
    end
那么在视图中就会把hash自动转换成select，这样很好的解决了用户界面跟数据之间数据类型的问题。
其次对于更详细的用法需要参考上面的wiki的链接。</p>

<h3>补充说明</h3>

<p>在使用devise和rails_admin的时候很多时候对于不同scope的devise的页面模板不一样，需要配置scope：
     #在config/initializers/devise.rb中修改如下
     config.scoped_views = true</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rub2.0安装nginx&amp;&amp;passenger的错误]]></title>
    <link href="http://ailenswpu.github.io/blog/2013/03/17/rub2-dot-0an-zhuang-nginx-and-and-passengerde-cuo-wu/"/>
    <updated>2013-03-17T22:32:00+08:00</updated>
    <id>http://ailenswpu.github.io/blog/2013/03/17/rub2-dot-0an-zhuang-nginx-and-and-passengerde-cuo-wu</id>
    <content type="html"><![CDATA[<p>因为最近换成ruby2.0所以，按照原来的rubychina的<a href="http://ruby-china.org/wiki/mac-nginx-passenger-rails">wiki</a>的方法安装的时候碰到了这样的错误:
当运行到<code>passenger-install-nginx-module</code>
就会出现如下错误:</p>

<pre><code>    /usr/local/rvm/wrappers/ruby-2.0.0-p0/rake nginx:clean nginx RELEASE=yes
    rake aborted!
    cannot load such file -- rubygems/builder
    /usr/local/rvm/gems/ruby-2.0.0-p0/gems/passenger-3.0.19/build/gempackagetask.rb:12:in &lt;top (required)&gt;'
    /usr/local/rvm/gems/ruby-2.0.0-p0/gems/passenger-3.0.19/build/basics.rb:41:in'
    /usr/local/rvm/gems/ruby-2.0.0-p0/gems/passenger-3.0.19/Rakefile:24:in &lt;top (required)&gt;'
    /usr/local/rvm/gems/ruby-2.0.0-p0/bin/ruby_noexec_wrapper:14:ineval'
    /usr/local/rvm/gems/ruby-2.0.0-p0/bin/ruby_noexec_wrapper:14:in `'
    (See full trace by running task with --trace)
</code></pre>

<p>最后找出解决方案:</p>

<pre><code>    git clone https://github.com/FooBarWidget/passenger.git
    cd passenger
    gem build passenger.gemspec
    gem install passenger-3.9.5.rc3.gem (or type your actual built gem name)
</code></pre>

<p>最后顺利解决问题</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Rake 版本问题]]></title>
    <link href="http://ailenswpu.github.io/blog/2012/11/19/rails-rake-ban-ben-wen-ti/"/>
    <updated>2012-11-19T15:49:00+08:00</updated>
    <id>http://ailenswpu.github.io/blog/2012/11/19/rails-rake-ban-ben-wen-ti</id>
    <content type="html"><![CDATA[<h1>rails rake 版本问题</h1>

<p>之前一直困扰我们的rake版本的问题，今天查找到了解决方法。</p>

<p>   通常情况下，如果我们电脑上同时装了不同版本的rake时，运行rake命令时会出错，如：</p>

<pre><code>rake db:migrate
rake aborted!
You have already activated rake 0.9.2, but your Gemfile
requires rake 0.9.0. Consider using bundle exec.

(See full trace by running task with --trace)

 之前一直不理解它所说的“ Consider using bundle exec.” 究竟是什么意思，
</code></pre>

<p>今天看到一个示例，真是恍然大悟，具体使用方法是在运行的命令前添加
 bundle exec，如上面的命令，我们写成：
bundle exec rake db:migrate</p>

<p>这样就OK了。</p>
]]></content>
  </entry>
  
</feed>
